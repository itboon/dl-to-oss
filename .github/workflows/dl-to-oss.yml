name: download to aliyun oss

on:
  push:
    branches:
      - master
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'download.yml'
      - '.github/workflows/*'

jobs:
  download-to-oss:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: copy files to oss
      shell: bash
      env:
        OSS_KEY_ID: ${{ secrets.OSS_KEY_ID }}
        OSS_KEY_SE: ${{ secrets.OSS_KEY_SECRET }}
        OSS_EP: oss-cn-hongkong.aliyuncs.com
        DL_OSS_URL: http://gosspublic.alicdn.com/ossutil/1.6.10/ossutil64
        DL_YQ_URL: https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64
        OSS_BUCKET: "oss://nas-ci"
        URL_FILE: download.yml
        OSS_SITE: https://nas-ci.oss-cn-hongkong.aliyuncs.com/
      run: |
        set -x
        
        mkdir -p ${HOME}/bin
        aliOSS="${HOME}/bin/ossutil"
        YQ="${HOME}/bin/yq"
        curl -o $aliOSS -L $DL_OSS_URL
        curl -o $YQ -L $DL_YQ_URL
        chmod a+rx $aliOSS
        chmod a+rx $YQ
        
        $aliOSS config -e $OSS_EP -i $OSS_KEY_ID -k $OSS_KEY_SE
        mkdir -p download
        num=$($YQ r $URL_FILE --length downloads)
        set +e
        for ((i=0; i<$num; i++)); do
          this_url=$($YQ r $URL_FILE downloads[${i}].url)
          this_file=$($YQ r $URL_FILE downloads[${i}].file)
          this_update=$($YQ r $URL_FILE downloads[${i}].update)
          $aliOSS stat ${OSS_BUCKET}/dl/${this_file} &> /dev/null
          # Download if the file exists on oss or need to update.
          if (( $? != 0 )) || (( $this_update == yes )); then
            curl -sSL ${this_url} -o download/${this_file}
          fi
        done
        set -e

        $aliOSS cp -rf download/ ${OSS_BUCKET}/dl/
        $aliOSS ls ${OSS_BUCKET}/ -s | grep '^oss' \
          | sed "s%oss://nas-ci/%${OSS_SITE}%g" > map.txt
        $aliOSS cp -f map.txt ${OSS_BUCKET}/map.txt
